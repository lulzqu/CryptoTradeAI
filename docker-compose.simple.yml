version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: crypto-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  server-basic:
    build:
      context: ./server-basic
      dockerfile: Dockerfile
    container_name: cryptotradeai-server-basic
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/cryptotradeai
      - APP_URL=http://184.73.5.19
      - CORS_ORIGIN=http://184.73.5.19
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/v1/health"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: cryptotradeai-client
    restart: always
    ports:
      - "80:80"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://184.73.5.19/api/v1
      - NEXT_PUBLIC_WS_URL=ws://184.73.5.19/ws
      - NEXT_PUBLIC_APP_URL=http://184.73.5.19
      - NEXT_PUBLIC_TRADING_ENABLED=true
      - NEXT_PUBLIC_MONITORING_ENABLED=true
    depends_on:
      - server-basic
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: 